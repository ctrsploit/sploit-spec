package cve_2099_9999

import (
	prerequisite2 "xsploit/pkg/prerequisite"

	"github.com/ctrsploit/sploit-spec/pkg/app"
	"github.com/ctrsploit/sploit-spec/pkg/prerequisite/user"
	"github.com/ctrsploit/sploit-spec/pkg/vul"
	"github.com/urfave/cli/v2"
)

var (
	aliases      = []string{"9999"}
	flagsExploit = []cli.Flag{
		&cli.BoolFlag{
			Name:    "force",
			Aliases: []string{"f"},
			Usage:   "force exploit even if checksec fails",
		},
	}
	VulCmd      = app.Vul2VulCmd(&Vul, aliases, nil, flagsExploit, true)
	CheckSecCmd = app.Vul2ChecksecCmd(&Vul, aliases, nil)
	ExploitCmd  = app.Vul2ExploitCmd(&Vul, aliases, flagsExploit, true)
)

type vulnerability struct {
	vul.BaseVulnerability
}

var (
	Vul = vulnerability{
		vul.BaseVulnerability{
			Name:                     "CVE-2099-9999",
			Description:              "Description of CVE-2099-9999",
			CheckSecPrerequisites:    &prerequisite2.EvenTime,
			ExploitablePrerequisites: &user.MustBeRoot,
		},
	}
)

func (v vulnerability) Exploit(context *cli.Context) (err error) {
	err = v.BaseVulnerability.Exploit(context)
	if err != nil {
		return
	}
	Exploit()
	return
}
